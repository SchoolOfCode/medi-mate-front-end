{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/HomeScreenHub.js","App.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","LoginScreen","useState","email","setEmail","password","setPassword","KeyboardAvoidingView","style","styles","container","behaviour","View","inputContainer","TextInput","placeholder","value","onChangeText","text","input","secureTextEntry","buttonContainer","TouchableOpacity","onPress","signInWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","message","button","Text","buttonText","createUserWithEmailAndPassword","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize","HomeScreen","Stack","createNativeStackNavigator","registerRootComponent","NavigationContainer","Navigator","Screen","options","headerShown","name","component"],"mappings":"gQAkB6B,IAAzBA,IAASC,KAAKC,OACVF,IAASG,cAZM,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAQDT,IAASU,MAGjB,IAAMC,EAAOX,IAASW,O,QC0CPC,EA5DK,WAClB,MAA0BC,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,WAAOG,EAAP,KAAiBC,EAAjB,KAwBA,OACE,eAACC,EAAA,EAAD,CAAsBC,MAAOC,EAAOC,UAAWC,UAAU,UAAzD,UACE,eAACC,EAAA,EAAD,CAAMJ,MAAOC,EAAOI,eAApB,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,QACZC,MAAOb,EACPc,aAAc,SAAAC,GAAI,OAAId,EAASc,IAC/BV,MAAOC,EAAOU,QAEhB,cAACL,EAAA,EAAD,CACEC,YAAY,WACZC,MAAOX,EACPY,aAAc,SAAAC,GAAI,OAAIZ,EAAYY,IAClCV,MAAOC,EAAOU,MACdC,iBAAe,OAInB,eAACR,EAAA,EAAD,CAAMJ,MAAOC,EAAOY,gBAApB,UACE,cAACC,EAAA,EAAD,CAAkBC,QA/BxB,WACEvB,EACCwB,2BAA2BrB,EAAOE,GAClCoB,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAgBC,KAC7BC,QAAQC,IAAI,kBAAmBF,EAAKxB,UAErC2B,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,aAwBczB,MAAOC,EAAOyB,OAAtD,SACE,cAACC,EAAA,EAAD,CAAM3B,MAAOC,EAAO2B,WAApB,qBAGF,cAACd,EAAA,EAAD,CACEC,QA9CR,WACEvB,EACGqC,+BAA+BlC,EAAOE,GACtCoB,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAgBC,KAC7BC,QAAQC,IAAIF,EAAKxB,UAElB2B,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,aAwC1BzB,MAAO,CAACC,EAAOyB,OAAQzB,EAAO6B,eAFhC,SAIE,cAACH,EAAA,EAAD,CAAM3B,MAAOC,EAAO8B,kBAApB,+BASJ9B,EAAS+B,IAAWC,OAAO,CAC/B/B,UAAW,CACTgC,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAEd/B,eAAgB,CACdgC,MAAO,OAET1B,MAAO,CACL2B,gBAAiB,QACjBC,kBAAmB,GACnBC,gBAAiB,GACjBC,aAAc,GACdC,UAAW,GAEb7B,gBAAiB,CACfwB,MAAO,MACPF,eAAgB,SAChBC,WAAY,SACZM,UAAW,IAEbhB,OAAQ,CACNY,gBAAiB,UACjBD,MAAO,OACPM,QAAS,GACTF,aAAc,GACdL,WAAY,UAEdN,cAAe,CACbQ,gBAAiB,QACjBI,UAAW,EACXE,YAAa,UACbC,YAAa,GAEfjB,WAAY,CACVkB,MAAO,QACPC,WAAY,MACZC,SAAU,IAEZjB,kBAAmB,CACjBe,MAAO,UACPC,WAAY,MACZC,SAAU,MCpGCC,EARI,WACjB,OACE,cAAC7C,EAAA,EAAD,UACE,cAACuB,EAAA,EAAD,6BCEAuB,GDKSlB,IAAWC,OAAO,ICLnBkB,eAiBCnB,IAAWC,OAAO,CAC/B/B,UAAW,CACTgC,KAAM,EACNI,gBAAiB,OACjBF,WAAY,SACZD,eAAgB,YCvBpBiB,aDGe,WACb,OACE,cAACC,EAAA,EAAD,UACE,eAACH,EAAMI,UAAP,WACE,cAACJ,EAAMK,OAAP,CACEC,QAAS,CAAEC,aAAa,GACxBC,KAAK,QACLC,UAAWlE,IAEb,cAACyD,EAAMK,OAAP,CAAcG,KAAK,OAAOC,UAAWV,c","file":"static/js/app.3b57c830.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDzrWiH_wehV_4QQnqgXHlHQ_gHaKV9U3c\",\r\n  authDomain: \"medimate-91beb.firebaseapp.com\",\r\n  projectId: \"medimate-91beb\",\r\n  storageBucket: \"medimate-91beb.appspot.com\",\r\n  messagingSenderId: \"662305892755\",\r\n  appId: \"1:662305892755:web:6183ec76c413ea8c09e066\",\r\n};\r\n\r\n// Initialize Firebase\r\nlet app;\r\nif (firebase.apps.length === 0) {\r\n  app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  app = firebase.app();\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };\r\n","import { useNavigation } from '@react-navigation/core'\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\"\r\nimport { auth } from '../firebase'\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  function HandleSignUp() {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredentials) => {\r\n        const user = userCredentials.user\r\n        console.log(user.email)\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  };\r\n\r\n  function HandleLogin() {\r\n    auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredentials) => {\r\n      const user = userCredentials.user\r\n      console.log('Logged in with:', user.email)\r\n    })\r\n    .catch((error) => alert(error.message))\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behaviour=\"padding\">\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={text => setPassword(text)}\r\n          style={styles.input}\r\n          secureTextEntry\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity onPress={HandleLogin} style={styles.button}>\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPress={HandleSignUp}\r\n          style={[styles.button, styles.buttonOutline]}\r\n        >\r\n          <Text style={styles.buttonOutlineText}>Register</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  inputContainer: {\r\n    width: '80%'\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n  },\r\n  buttonContainer: {\r\n    width: '60%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  button: {\r\n    backgroundColor: '#0782F9',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  buttonOutline: {\r\n    backgroundColor: 'white',\r\n    marginTop: 5,\r\n    borderColor: '#0782F9',\r\n    borderWidth: 2,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  buttonOutlineText: {\r\n    color: '#0782F9',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>Home Screen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport HomeScreen from \"./screens/HomeScreenHub\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          options={{ headerShown: false }}\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n        />\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}